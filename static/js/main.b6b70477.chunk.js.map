{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/utils/getParents.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","cn","NavBar","role","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","slug","isWoman","PeopleTable","people","selectedSlug","map","born","died","motherName","fatherName","mother","father","isSelectedPerson","editedMotherName","editedFatherName","getParents","parentName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useParams","fetchPeople","peopleFromServer","preparedPeople","console","warn","useEffect","isPeopleVisible","Boolean","length","hasErrorMessage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b6b70477.chunk.js","sourcesContent":["export const HomePage: React.FC = () => <h1 className=\"title\">Home Page</h1>;\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      cn('navbar-item', { 'has-background-grey-lighter': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n  const isWoman = sex === 'f';\n\n  return (\n    <Link to={`../${slug}`} className={cn({ 'has-text-danger': isWoman })}>\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            slug,\n            motherName,\n            fatherName,\n            mother,\n            father,\n          } = person;\n\n          const isSelectedPerson = selectedSlug === slug;\n          const editedMotherName = motherName || '-';\n          const editedFatherName = fatherName || '-';\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={cn({ 'has-background-warning': isSelectedPerson })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : editedMotherName}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : editedFatherName}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from '../../types';\n\nexport const getParents = (people: Person[], parentName: string | null) => {\n  return people.find(person => person.name === parentName);\n};\n","/* eslint-disable no-console */\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { getParents } from '../utils/getParents';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const fetchPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const preparedPeople = peopleFromServer.map(person => ({\n        ...person,\n        mother: getParents(peopleFromServer, person.motherName),\n        father: getParents(peopleFromServer, person.fatherName),\n      }));\n\n      setPeople(preparedPeople);\n    } catch {\n      console.warn('An occur error while loading people');\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const isPeopleVisible = !isLoading && Boolean(people.length);\n  const hasErrorMessage = !people.length && !isLoading && !hasError;\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {hasError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {isPeopleVisible && <PeopleTable people={people} selectedSlug={slug} />}\n\n        {hasErrorMessage && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}